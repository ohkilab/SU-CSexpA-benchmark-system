apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f compose.yaml
    kompose.version: 1.28.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: backend
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: backend
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f compose.yaml
        kompose.version: 1.28.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.network/templates-default: "true"
        io.kompose.service: backend
    spec:
      containers:
        - env:
            - name: BACKEND_BENCHMARK_HOST
              valueFrom:
                configMapKeyRef:
                  key: BACKEND_BENCHMARK_HOST
                  name: env
            - name: BACKEND_GRPC_PORT
              valueFrom:
                configMapKeyRef:
                  key: BACKEND_GRPC_PORT
                  name: env
            - name: BACKEND_INIT_ADMIN_NAME
              valueFrom:
                configMapKeyRef:
                  key: BACKEND_INIT_ADMIN_NAME
                  name: env
            - name: BACKEND_INIT_ADMIN_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: BACKEND_INIT_ADMIN_PASSWORD
                  name: env
            - name: BACKEND_JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  key: BACKEND_JWT_SECRET
                  name: env
            - name: BACKEND_MYSQL_HOST
              valueFrom:
                configMapKeyRef:
                  key: BACKEND_MYSQL_HOST
                  name: env
            - name: BACKEND_MYSQL_PORT
              valueFrom:
                configMapKeyRef:
                  key: BACKEND_MYSQL_PORT
                  name: env
            - name: BACKEND_STORAGE_PATH
              valueFrom:
                configMapKeyRef:
                  key: BACKEND_STORAGE_PATH
                  name: env
            - name: BENCHMARK_GRPC_PORT
              valueFrom:
                configMapKeyRef:
                  key: BENCHMARK_GRPC_PORT
                  name: env
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_DATABASE
                  name: env
            - name: MYSQL_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_PASSWORD
                  name: env
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_ROOT_PASSWORD
                  name: env
            - name: MYSQL_USER
              valueFrom:
                configMapKeyRef:
                  key: MYSQL_USER
                  name: env
          image: {{ .Values.backend.image }}
          name: backend
          resources: {}
          volumeMounts:
            - mountPath: /app/storage
              name: backend-claim0
      restartPolicy: Always
      volumes:
        - name: backend-claim0
          persistentVolumeClaim:
            claimName: backend-claim0
status: {}
